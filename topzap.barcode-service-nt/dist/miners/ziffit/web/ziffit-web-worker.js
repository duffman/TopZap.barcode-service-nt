'use strict';Object.defineProperty(exports,'__esModule',{value:true});const request=require('request');const ziffit_web_data_1=require('./ziffit-web-data');class ZiffitWebWorker{constructor(){this.baseRequest=request.defaults({'baseUrl':'https://api.ziffit.com/','headers':{'Accept-Encoding':'gzip, deflate','Accept':'*/*','User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36','Accept-Language':'en-UK'},'gzip':true,'json':true});}getToken(){return new Promise((resolve,reject)=>{this.baseRequest.get('authorization-token',function optionalCallback(err,httpResponse,jsonData){if(err){reject(err);}else{let resultData;try{resultData=ziffit_web_data_1.Convert.toZiffitTokenResult(jsonData);resolve(resultData.token);}catch(err){resolve(null);}}});});}async search(ean,token=null){if(token===null){token=await this.getToken();}return new Promise((resolve,reject)=>{this.baseRequest.post('basket/items',{'body':{'ean':ean},'headers':{'authorization':'Bearer '+token}},function optionalCallback(err,httpResponse,jsonData){if(err){reject(err);}else{let resultData;try{resultData=ziffit_web_data_1.Convert.toZiffitResult(jsonData);resolve(resultData);}catch(err){resolve(null);}}});});}getCart(cartId,token){return new Promise((resolve,reject)=>{this.baseRequest.get('basket',{'headers':{'authorization':'Bearer '+token}},function optionalCallback(err,httpResponse,jsonData){if(err){reject(err);}else{let resultData;try{resultData=ziffit_web_data_1.Convert.toZiffitCartResult(jsonData);resolve(resultData);}catch(err){resolve(null);}}});});}removeFromCart(itemId,token){return new Promise((resolve,reject)=>{this.baseRequest.delete(`basket/items/${itemId}`,{'headers':{'authorization':'Bearer '+token}},function optionalCallback(err,httpResponse,jsonData){if(err){reject(err);}else{let resultData;try{resultData=ziffit_web_data_1.Convert.toZiffitCartRemoveResult(jsonData);resolve(resultData);}catch(err){resolve(null);}}});});}}exports.ZiffitWebWorker=ZiffitWebWorker;