'use strict';Object.defineProperty(exports,'__esModule',{value:true});const express=require('express');const bodyParser=require('body-parser');const express_1=require('express');const logger_1=require('../cli/logger');const price_controller_1=require('./controllers/price-controller');const settings_1=require('../settings');class WebApp{constructor(){this.isRunning=false;this.webRoutes=express_1.Router();this.webApp=express();this.webApp.use(this.webRoutes);this.priceController=new price_controller_1.PriceController();this.priceController.initRouter(this.webRoutes);}showSettings(){logger_1.Logger.logGreen('Using Port :',settings_1.Settings.Server.ServicePort);}setApiClients(clients){console.log('setApiClients ::',clients);if(clients){this.apiClients=clients;this.priceController.setApiClients(clients);}else{logger_1.Logger.logFatalError('ERROR ::: WebApp ::: setApiClients');}}configureWebServer(){let zpNameVer='ZapStorm/2.0.3';let zpPoweredBy=['X-PoweredBy','ZapperWorkerElves:Elf1'];let zpServer=['Server',zpNameVer];this.webRoutes.use(bodyParser.json());this.webRoutes.use(bodyParser.urlencoded({extended:true}));this.webRoutes.use((req,res,next)=>{res.header('Access-Control-Allow-Origin','*');res.header('Access-Control-Allow-Headers','Origin, X-Requested-With, Content-Type, Accept');next();});this.initRoutes();this.webRoutes.get('/',(req,resp)=>{let min=300;let max=10000;let randRespTime=Math.floor(Math.random()*(max-min+1)+min);setTimeout(function(){resp.send('Random::'+randRespTime.toString());},randRespTime);});}debug(){let barcode='0819338020068';try{this.apiClients.map(miner=>{console.log('Calling miner :::',miner.name);miner.getOffer(barcode).then(res=>{console.log('RES :::',res);});});}catch(err){console.log(`Miner failed ::`,err);}}initRoutes(){let scope=this;if(!this.apiClients){logger_1.Logger.logError('No API Clients Set');process.exit(233);}}start(debug=false){this.configureWebServer();if(debug){this.debug();}else{logger_1.Logger.logGreen('Starting...');this.webApp.listen(settings_1.Settings.Server.ServicePort,()=>{this.isRunning=true;console.log('Express server listening on port '+settings_1.Settings.Server.ServicePort);});}}}exports.WebApp=WebApp;