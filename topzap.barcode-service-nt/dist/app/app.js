'use strict';Object.defineProperty(exports,'__esModule',{value:true});const webapp_1=require('./webapp/webapp');const logger_1=require('./cli/logger');const constants_1=require('../inc/constants');const momox_api_client_1=require('../miners/api/momox-api-client');const wbg_api_client_1=require('../miners/api/wbg-api-client');const ziffit_api_client_1=require('../miners/api/ziffit-api-client');const mmp_api_client_1=require('../miners/api/mmp-api-client');class Application{constructor(debug=false){this.debug=debug;logger_1.Logger.logGreen('Starting up...');this.webApp=new webapp_1.WebApp();this.zapMiners=new Array();logger_1.Logger.logPurple(constants_1.Constants.APP_NAME);if(this.configure()){this.start();}}configure(){logger_1.Logger.logGreen('App configure...');try{let wbgMiner=new wbg_api_client_1.WbgAppApi();let momoxMiner=new momox_api_client_1.MomoxAppApi(true);let ziffitMiner=new ziffit_api_client_1.ZiffitAppApi();let magpieMiner=new mmp_api_client_1.MmpAppApi();this.zapMiners.push(ziffitMiner);this.zapMiners.push(momoxMiner);this.zapMiners.push(magpieMiner);this.zapMiners.push(wbgMiner);for(let index in this.zapMiners){let miner=this.zapMiners[index];logger_1.Logger.logGreen('Registered Miner ::',miner.name);}}catch(err){logger_1.Logger.logError('Error Initializing Miners ::',err);return false;}this.webApp.setApiClients(this.zapMiners);return true;}start(){this.webApp.start(this.debug);}}exports.Application=Application;