'use strict';Object.defineProperty(exports,'__esModule',{value:true});const Scaledrone=require('scaledrone-node');const channel_events_1=require('../channels.git/channel-events');const zap_offer_model_1=require('../models/zap-ts-models/zap-offer.model');const channel_config_1=require('../channels.git/channel-config');const pstr_utils_1=require('../../lib/putte-ts/pstr-utils');const channel_message_1=require('../channels.git/channel-message');const zap_message_types_1=require('../models/zap-ts-models/messages/zap-message-types');const logger_1=require('../cli/logger');class BidService{constructor(apiClient){this.apiClient=apiClient;this.drone=new Scaledrone('0RgtaE9UstNGjTmu');this.channel=this.drone.subscribe(channel_config_1.MessagePipes.GetBid);this.channel.on(channel_events_1.ChannelEvents.ChannelData,data=>{this.onNewBid(data);});}formatOffer(input){let res=-1;try{let resStr=input.trim().replace(',','.');res=parseFloat(resStr);}catch(err){console.log('formatOffer :: ERROR ::',err);res=-1;}return res;}emitGetOffersInit(sessId,data){let mess=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.GetOffersInit,data,sessId);this.bidsChannel.emitMessage(mess,sessId);}emitVendorOffer(sessId,data){let mess=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.VendorOffer,data,sessId);this.bidsChannel.emitMessage(mess,sessId);}emitOffersDone(sessId){let mess=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.GetOffersDone,{},sessId);this.bidsChannel.emitMessage(mess,sessId);}onNewBid(message){console.log('ON NEW BID ---->');let channelMess=message;let code=null;let sessId=null;try{code=channelMess.data.code;sessId=channelMess.sessId;console.log('BidChannelService :: CODE ::',code);console.log('BidChannelService :: SESSION ::',sessId);}catch(ex){code=null;}if(pstr_utils_1.PStrUtils.isEmpty(code)||pstr_utils_1.PStrUtils.isEmpty(sessId)){let err=new Error('Code or SessionId is missing');}else{this.getVendorBid(code).then(bid=>{console.log('VENDOR BID ::',bid);let messData=new channel_message_1.ChannelMessage(zap_message_types_1.ZapMessageType.VendorOffer,bid,sessId);this.drone.publish({room:channel_config_1.MessagePipes.NewBid,message:messData});}).catch(err=>{logger_1.Logger.logFatalError('getVendorBid ::',err);});}}getVendorBid(code){console.log('getVendorBid ::',code);let scope=this;let result=null;return new Promise((resolve,reject)=>{let data=new zap_offer_model_1.VendorOfferData('0887195000424',13,'88 Heroes: 98 Heroes Edition - Nintendo Switch');data.accepted=true;data.offer='0.34';resolve(data);});}}exports.BidService=BidService;